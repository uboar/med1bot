<!DOCTYPE html>
<html lang="jp">

<head>
    <!--CDNから持ってくるもの-->
    <!--Google Fonts-->
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <!--Material Design Icons-->
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <!--Vuetify-->
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <!--animate.css-->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
</head>

<body>
    <div id="app">
        <v-app>
            <v-main>
                <v-layout
                    v-bind:style="{'background-color': receivedData.backgroundColor, height : receivedData.height}">
                    <!--放送表示部-->
                    <v-flex style="overflow: auto">
                        <v-row>
                            <v-col></v-col>
                            <v-col>
                                <v-container>
                                    <!--点数表示部-->
                                    <v-card class="mx-2 my-2 animate__animated animate__bounceInDown" elevation="0"
                                        v-if="show">
                                        <v-card-text class="text-center">
                                            <!--点数表示は少数点切り捨て-->
                                            <h1>{{Math.floor(receivedData.currentMedley.point)}}</h1>
                                        </v-card-text>
                                    </v-card>
                                    <!--メドレー名表示部-->
                                    <v-card class="mx-4 my-4 animate__animated animate__bounceInDown" shaped
                                        elevation="0" outlined v-if="show">
                                        <v-card-text class="text-center">
                                            <h2>{{receivedData.currentMedley.name}} /
                                                {{receivedData.currentMedley.artist}}</h2>
                                        </v-card-text>
                                    </v-card>
                                </v-container>
                            </v-col>
                            <v-col></v-col>
                        </v-row>
                        <v-row>
                            <v-col v-for="(item, index) in receivedData.reviewers" :key="item.name">
                                <v-container>
                                    <!--点数表示部-->
                                    <v-card class="mx-2 my-2 animate__animated animate__bounceIn" elevation="0"
                                        v-if="show && item.isValid">
                                        <v-card-text class="text-center">
                                            <!--点数表示は少数点切り捨て-->
                                            <h1>{{Math.floor(receivedData.currentMedley.reviewersPoint[index])}}</h1>
                                        </v-card-text>
                                    </v-card>
                                    <!--名前表示部-->
                                    <v-card class="mx-4 my-4 animate__animated animate__bounceIn" shaped elevation="0"
                                        outlined v-if="show && item.isValid">
                                        <v-card-text class="text-center">
                                            <h2>{{item.name}}</h2>
                                        </v-card-text>
                                    </v-card>
                                </v-container>
                            </v-col>
                            <!--視聴者投票-->
                            <v-col>
                                <v-container>
                                    <!--点数表示部-->
                                    <v-card class="mx-2 my-2 animate__animated animate__bounceInRight" elevation="0"
                                        dark v-if="show">
                                        <v-card-text class="text-center">
                                            <!--点数表示は少数点切り捨て-->
                                            <h1>{{Math.floor(receivedData.currentMedley.listenerPoint.actualPoint)}}
                                            </h1>
                                        </v-card-text>
                                    </v-card>
                                    <!--名前表示部-->
                                    <v-card class="mx-4 my-4 animate__animated animate__bounceInRight" shaped
                                        elevation="0" outlined dark v-if="show">
                                        <v-card-text class="text-center">
                                            <h2>視聴者投票</h2>
                                        </v-card-text>
                                    </v-card>
                                </v-container>
                            </v-col>
                        </v-row>
                    </v-flex>
                </v-layout>
                <br>
                <v-divider>
                </v-divider>
                <v-layout>
                    <v-flex style="overflow: auto">
                        <h2 class="text-center">--ここからの画面は反映しない--</h2>
                        <v-tabs grow dense v-model="models.tab">
                            <v-tab>
                                表示設定
                            </v-tab>
                            <v-tab>
                                順位情報
                            </v-tab>
                        </v-tabs>
                        <v-tabs-items v-model="models.tab">
                            <br>
                            <v-tab-item>
                                <v-btn x-large block color="info" :disabled="receivedData.reviewingStatus <= 0"
                                    @click="show = !show">採点結果を表示する
                                </v-btn>
                                <v-btn outlined small block color="warning" v-if="receivedData.reviewingStatus <= 0"
                                    @click="show = !show">強制表示</v-btn>
                                <v-row>
                                    <v-col cols="2">
                                        <h4>背景色</h4>
                                        <v-btn small block outlined color="green"
                                            @click="copyToClipBoard(`/setbgc ${receivedData.backgroundColor}`)">
                                            bot用変換コマンドをコピー</v-btn>
                                        <v-color-picker v-model="receivedData.backgroundColor"></v-color-picker>
                                    </v-col>
                                    <v-col>
                                    </v-col>
                                </v-row>
                            </v-tab-item>
                            <v-tab-item>
                                <v-data-table dense :items="receivedData.medleys" :headers="headers">
                                </v-data-table>
                            </v-tab-item>
                        </v-tabs-items>
                    </v-flex>
                </v-layout>
            </v-main>
        </v-app>
    </div>

    <style>
        .fade-enter-active,
        .fade-leave-active {
            transition: opacity .5s;
        }
    </style>

    <!--CDNから持ってくるもの-->
    <!--Vue.js v2-->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <!--Vuetify-->
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>

    <script>
        /**
         * EJSで貰ったデータをJSONに戻す
         */
        const receivedData = JSON.parse(`<%- data %>`);

        /**
         * Vue.jsのマウント
         */
        var app = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data: {
                receivedData: receivedData,
                models: {
                    tab: 0,
                },
                headers: [
                    { text: "メドレー名", value: "name" },
                    { text: "作者名", value: "artist" },
                    { text: "合計点", value: "point" },
                    { text: receivedData.reviewers[0].name, value: "reviewersPoint[0]" },
                    { text: receivedData.reviewers[1].name, value: "reviewersPoint[1]" },
                    { text: receivedData.reviewers[2].name, value: "reviewersPoint[2]" },
                    { text: receivedData.reviewers[3].name, value: "reviewersPoint[3]" },
                    { text: receivedData.reviewers[4].name, value: "reviewersPoint[4]" },
                    { text: "視聴者投票", value: "listenerPoint.actualPoint" },
                ],
                show: false,
            },
            methods: {
                /**
                 * クリップボードにコピー
                 */
                copyToClipBoard(text) {
                    navigator.clipboard.writeText(text);
                }
            }
        });
    </script>
</body>

</html>